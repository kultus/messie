{"name":"Messie","body":"## Features\r\n\r\n* follows HTTP redirects (max 5 levels deep)\r\n* get all links a page contains to continue crawling recursively\r\n* supports caching of pages\r\n* decompression of gzip or deflate compressed is completely handled by messie\r\n* return plain text from web pages\r\n* crawl SSL encrypted pages\r\n* set your own request headers via a fancy API\r\n* directly access the page's content with Nokogiri\r\n* records the response time of every crawled page\r\n* contains a CLI tool that uses the complete API\r\n\r\n## Examples\r\n\r\n```ruby\r\npage = Messie::Page.crawl \"http://www.google.de\" do\r\n    # these respond to method_missing, so any header key\r\n    # might be allowed here\r\n\r\n    accept_charset 'utf-8'\r\n    accept 'text/html'\r\nend\r\n\r\npage.response_code # => 200\r\npage.response_time # => 0.83234\r\npage.body          # => \"<html><title>foo</title>... <h1>Foobar</h1>\"\r\npage.text          # => \"Foobar ...\"\r\npage.title         # => foo\r\npage.links         # => ['http://www.google.com', 'http://www.foobar.com']\r\npage.nokogiri      # => <Nokogiri::Document>\r\n```\r\n\r\n## Caching\r\n\r\nWhen it comes to caching pages, messie takes a lot of work from you. All you have to do is to persist\r\n`page.last_modified` and `page.etag` and provide them on your next call to `Messie::Page.crawl`.\r\n\r\n```ruby\r\npage = Messie::Page.crawl \"http://www.google.de\" do\r\n  if_modified_since Time.now\r\n  if_none_match \"1edec-3e3073913b101\"\r\nend\r\n\r\npage.changed? # => false\r\npage.cached? # => true, the resource is being cached by the server\r\npage.etag # => \"1edec-3e3073913b101\"\r\npage.last_modified # => #<Time>\r\n```\r\n\r\n## Requirements\r\n\r\n* nokogiri\r\n\r\n## Install\r\n\r\n* `[sudo] gem install messie`\r\n\r\n## Author\r\n\r\nOriginal author: Dominik Liebler <liebler.dominik@googlemail.com>\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2012 Dominik Liebler\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","tagline":"a small layer over Ruby's Net::HTTP(S)","google":"UA-9816149-13","note":"Don't delete this file! It's used internally to help with page regeneration."}